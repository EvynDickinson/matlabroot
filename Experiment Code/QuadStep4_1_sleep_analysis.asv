
% Find 'sleep' points in data

% set a buffer circle
% create a 'running' count for occupancy of that circle 


X = data(1).data(1).data.x_loc;
Y = data(1).data(1).data.y_loc;

X()




%% grid spacing???

% pull info for the first trial:


vidDir = [baseFolder expData.parameters.date '/' expName '_'];
dataDir = [baseFolder 'Manual Tracking\FlyRampVideos\'];
vidName = [dataDir expData.parameters.date ' ' expName ' fly movement.avi'];

% Set axis limits for the selected arena
x = data.centre(1);
y = data.centre(2);
r = data.r;
xlimit = [x-(r+50),x+(r+50)];
ylimit = [y-(r+50),y+50+r];



videoPath = [vidDir num2str(oldVid) '.avi'];
movieInfo = VideoReader(videoPath); %read in video

fig = figure; set(fig,'pos',[-1030 279 772 1009],'color','k'); %'Visible','Off'
frame = startVid.loc;
    vid = T.vidNums(frame);
    vid_frame = T.vidFrame(frame);
    if vid>oldVid
        videoPath = [vidDir num2str(vid) '.avi'];
        movieInfo = VideoReader(videoPath); %read in video
        oldVid = vid;
    end
    currentImg = rgb2gray(read(movieInfo,vid_frame));

imshow(currentImg)
    xlim(xlimit); ylim(ylimit); 




%% 




% MOVEMENT:
xmin = arenaData(arena).centre(1)-r; % arena spacing divide by pixel size
xmax = arenaData(arena).centre(1)+r;
ymin = arenaData(arena).centre(2)-r;
ymax = arenaData(arena).centre(2)+r;
nbins = 100;
xedge = linspace(xmin,xmax,nbins+1);
yedge = linspace(ymin,ymax,nbins+1);
N = [];
for frame = 1:T.frame(end)
    X = arenaData(arena).x_loc(frame,:); X(isnan(X)) = [];
    Y = arenaData(arena).y_loc(frame,:); Y(isnan(Y)) = [];
    N(:,:,frame) = histcounts2(X,Y,xedge,yedge);
end
binDiff = diff(N,1,3);
binDiff(binDiff<0) = 0;
movement = squeeze(sum(sum(binDiff,1),2));
binSizeinMM = ((2*r)/nbins)/pix2mm;
movement = movement./binSizeinMM;
movement = movement*3; % convert to per second WITH 3fps videos
avg_movement = movement./T.flyCount(1:end-1,arena);% normalize for the number of flies actually tracked on the page:
% update data structures
occupancy.movement = avg_movement;
occupancy.baseMovement = movement;