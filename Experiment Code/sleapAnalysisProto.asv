
clear 
close all
clc

%% Select Date & Experiment to Process

%get base folder pathway
[baseFolder, folder] = getCloudPath(2);

% Select the complete experiments to process
list_dirs = dir([baseFolder folder, '\*.mat']); %only matlab files
list_dirs = {list_dirs(:).name};
expNames = cellfun(@(x) x(1:end-11),list_dirs,'UniformOutput',false); %pull root name
expName = expNames{listdlg('ListString', expNames, 'SelectionMode', 'Single')};
% Pull fly summary sheet information on selected experiment
[excelfile, Excel, xlFile] = load_FlyBowlExperiments;
XLrow = find(strcmpi(excelfile(:,Excel.date), folder) & ...
           strcmpi(excelfile(:,Excel.expID), expName)); %rows with sel date

% Make new analyzed file directory
analysisDir = [baseFolder folder '\analysis\'];
if ~isfolder(analysisDir); mkdir(analysisDir); end


%% Load relevant data files (.mat, .csv, .h5)
warning off
% load matlab file for experiment
expData = load([baseFolder folder '\' expName 'dataMat.mat']);

% load the temperature log for the experiment
tempLog = readmatrix([baseFolder folder '\' expName '_RampLog']);

nvids = expData.num.vids;
for vid = 1:nvids
    % load tracking predictions
    filePath = [baseFolder folder '\' expName '_' num2str(vid) '.h5'];
    data(vid).occupancy_matrix = h5read(filePath,'/track_occupancy');
    data(vid).tracks = h5read(filePath,'/tracks');
    
end


%% Parameter extraction

% Number of flies:
nflies = excelfile{XLrow,Excel.numflies};
if isnan(nflies)
    % manual count of flies
    movieInfo = VideoReader([baseFolder folder '\' expName '_1.avi']); %read in video
    demoImg = rgb2gray(read(movieInfo,1));
    fprintf('\nCount the number of flies in the picture by clicking them\n then hit ENTER\n')
    nflies = size(readPoints(demoImg),2);
    % write number of flies into the excel sheet
    xlswrite(xlFile, {num2str(nflies)}, 'Exp List', [Alphabet(Excel.numflies) num2str(XLrow)]);
end
fprintf(['\nNumber of flies: ' num2str(nflies) '\n'])

% Find food wells and their identities %TODO
pts = readPoints(demoImg,4); % get locations of the wells from the image

%% Data organization by video

% Tracking matrix locations: 
ML.frame = 1;   % frames are 1st dim
ML.node = 2;    % location selection on the fly (1-head, 2-abdo)
ML.xy = 3;      % xy coordinates
ML.fly = 4;     % tracks for 'a' fly

% pull info for each video
flyCount = []; 
for vid = 1:nvids
    nframes = size(data(vid).occupancy_matrix,2);
    % number of flies labeled on each frame:
    flyCount = [flyCount; sum(data(vid).occupancy_matrix)'];
    
    % all data for head tracked location
    headData = squeeze(data(vid).tracks(:,1,:,:));
    
    % x-y coordinates of flies for each frame
    x_loc = squeeze(headData(:,1,:));
    y_loc = squeeze(headData(:,2,:));
    
    % temperature alignment
    logROI(1) = find(tempLog(:,1)==expData.tempLogStart(vid,2));
    logROI(2) = find(tempLog(:,1)==expData.tempLogEnd(vid,2));
    tempCourse = tempLog(logROI(1):logROI(2),2);
    stpsize = ceil(nframes/length(tempCourse));
    x = 1:stpsize:nframes;
    % upsample the temperature log:
    fullTempList = interp1(x,tempCourse,1:nframes,'spline');
%     figure; plot(fullTempList)
    
    
    % Find number of flies that are near each well for each frame
    radii = 200; %distance must be less than this number to count for a well ROI
    
    
    nInst = length(X);
    % loop for all wells
    for well = 1:4
        b = pts(:,well); % well 1 points
        % reshape data points from whole video for optimized maths
        ntracks = size(x_loc,2);
        X = reshape(x_loc,numel(x_loc),1); 
        Y = reshape(y_loc,numel(y_loc),1); 
        % within well range?
        euDist = sqrt((b(1)-X).^2 + (b(2)-Y).^2); %euclidian distance from well center
        well_loc = (euDist<=radii);
        well_loc = reshape(well_loc,[nframes,ntracks]);
        data(vid).well_loc
        
        
        
        euDist = sqrt((b(1)-X).^2 + (b(2)-Y).^2);
        data(well).well_loc = (euDist<=radii);
        data(well).well_count = sum((euDist<=radii));

        % occupation probability
        data(well).occ_prob = data(well).well_count/nInst;
        data(well).nInst = nInst;
    end
        
        
        
    

    x = squeeze(headdata(:, 1, :)); % frame, instance
    y = squeeze(headdata(:, 2, :));

    X = reshape(x,numel(x),1);
    Y = reshape(y,numel(y),1);
    loc = isnan(X);
    X(loc) = [];
    Y(loc) = [];
    % squash all points together over the video:

    
    % what if we do a min radius from the coordinates of the food bowl?  
    fig = getfig; set(fig, 'color', 'k');
    hist2d(X,Y, 'probability', 'tile')
    axis tight; axis square
    set(gca, 'visible', 'off')
    c = colorbar;
    c.Color = [1,1,1];
    hold on
    scatter(pts(1,:),pts(2,:), 75, 'r', 'filled') % could automate the color on this

    
    

%     
end

% visual check that the number of tracked flies is close to the actual number
fig = getfig;
    histogram(flyCount); vline(nflies, 'w-'); 
    xlabel('Number tracked flies'); ylabel('Frame count')
    formatFig(fig, true)
save_figure([analysisDir expName ' fly count histo'], '-png')

% https://sleap.ai/notebooks/Analysis_examples.html <-- python code for data example
% h5disp(filePath)


%% Basic sorting of the data...
% demo only -- load in the camera image for the frame and overlay...
demovid = 'G:\My Drive\Jeanne Lab\DATA\08.27.2021\NonlinearCooling_1.avi';
movieInfo = VideoReader(demovid);
% mat locations: 
ML.frame = 1;   % frames are 1st dim
ML.node = 2;    % 
ML.xy = 3;      % xy coordinates
ML.fly = 4;     % tracks for 'a' fly

% all data for head tracked location
headdata = squeeze(tracks_matrix(:,1,:,:));

frame = 5;

% tracked points
x = squeeze(headdata(frame, 1, :));
y = squeeze(headdata(frame, 2, :));
x(isnan(x)) = []; % remove empty tracks
y(isnan(y)) = [];
% image
img = read(movieInfo,frame);

% overlay:
fig = getfig; set(fig, 'color', 'k')
hold on
imagesc(img)
scatter(x,y, 30, 'y')
axis tight; axis square
set(gca, 'visible', 'off')

% save_figure(fig, 'G:\My Drive\Jeanne Lab\DATA\08.27.2021\Tracking\demo tracking image','-png');


%% 
pts = readPoints(img,4); % get locations of the wells from the image

x = squeeze(headdata(:, 1, :)); % frame, instance
y = squeeze(headdata(:, 2, :));

X = reshape(x,numel(x),1);
Y = reshape(y,numel(y),1);
loc = isnan(X);
X(loc) = [];
Y(loc) = [];
% squash all points together over the video:


% what if we do a min radius from the coordinates of the food bowl?  
fig = getfig; set(fig, 'color', 'k');
hist2d(X,Y, 'probability', 'tile')
axis tight; axis square
set(gca, 'visible', 'off')
c = colorbar;
c.Color = [1,1,1];
hold on
scatter(pts(1,:),pts(2,:), 75, 'r', 'filled') % could automate the color on this

% save_figure(fig, 'G:\My Drive\Jeanne Lab\DATA\08.27.2021\Tracking\demo histogram vid 1','-png');

%% Pull temperature information for each frame

% get temp log
tempLogName = 'G:\My Drive\Jeanne Lab\DATA\08.27.2021\NonlinearCooling_RampLog.csv';
tempLog = readmatrix(tempLogName);

% what are the temp time points for this video start and stop: 
% -- TODO load in the appropriate matlab file for this video...harvest code
% from VidAnalysisStep1...


% https://sleap.ai/notebooks/Training_and_inference_using_Google_Drive.html

%% Find flies within ROI of each well

% how many points within a specific radius of the well?
radii = 200; %distance must be less than this number to count for a well ROI
nInst = length(X);
% loop for all wells
for well = 1:4
    b = pts(:,well); % well 1 points
    euDist = sqrt((b(1)-X).^2 + (b(2)-Y).^2);
    data(well).well_loc = (euDist<=radii);
    data(well).well_count = sum((euDist<=radii));
    
    % occupation probability
    data(well).occ_prob = data(well).well_count/nInst;
    data(well).nInst = nInst;
end







% % visual confirmation that the selected points are near the well:
% fig = getfig; set(fig, 'color', 'k');
% hist2d(X,Y, 'probability', 'tile')
% axis tight; axis square
% set(gca, 'visible', 'off')
% c = colorbar;
% c.Color = [1,1,1];
% hold on
% scatter(X(well_loc),Y(well_loc), 50, 'y') % could automate the color on this
% scatter(pts(1,:),pts(2,:), 75, 'r', 'filled') % could automate the color on this
% viscircles(b',radii)
% 
% save_figure(fig, 'G:\My Drive\Jeanne Lab\DATA\08.27.2021\Tracking\demo histogram point sel','-png');
% 

%% 











