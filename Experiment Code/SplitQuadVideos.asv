% LOAD VIDEOS FOR AN EXPERIMENT AND CROP THEM INTO THE FOUR INDEPENDENT
% QUADRANTS / ARENAS FOR TRACKING AND POST PROCESSING
close; clc  

%% Select data to split:
%get base folder pathway
[baseFolder, folder] = getCloudPath(2); 

% Select the complete experiments to process
list_dirs = dir([baseFolder folder, '\*.mat']); %only matlab files
list_dirs = {list_dirs(:).name};
expNames = cellfun(@(x) x(1:end-11),list_dirs,'UniformOutput',false); %pull root name
expName = expNames{listdlg('ListString', expNames, 'SelectionMode', 'Single')};
clear expNames
% Pull fly summary sheet information on selected experiment
[excelfile, Excel, xlFile] = load_QuadBowlExperiments;
XLrow = find(strcmpi(excelfile(:,Excel.date), folder) & ...
           strcmpi(excelfile(:,Excel.expID), expName)); %rows with sel date

% Make a new video folder:
videosDir = [baseFolder folder '\Split Videos\'];
if ~isfolder(videosDir); mkdir(videosDir); end

%% Assign quadrants to split
%Load vid template and manually align vid split
params = load([baseFolder folder '\' expName ' parameters.mat']);
nvids = params.parameters.numVids;
movieInfo = VideoReader([baseFolder folder '\' expName '_1.avi']); %read in video
demoImg = rgb2gray(read(movieInfo,1));
% figure; imshow(demoImg)
% [J,rect] = imcrop(demoImg);

% use fixed crop size for all images and videos
cropWidth = 946;
width = 1920;
% RGB = insertShape(demoImg,'rectangle',[0,0,cropWidth, cropWidth]);
% imshow(RGB)
% cropping indexes
roiA = [width-cropWidth, width, 1, cropWidth];
roiB = [1, cropWidth, 1, cropWidth];
roiC = [width-cropWidth, width, width-cropWidth, width];
roiD = [1, cropWidth, width-cropWidth, width];

% crop the image (will be used for later processing)
imgA = demoImg(roiA(1):roiA(2), roiA(3):roiA(4));
imgB = demoImg(roiB(1):roiB(2), roiB(3):roiB(4));
imgC = demoImg(roiC(1):roiC(2), roiC(3):roiC(4));
imgD = demoImg(roiD(1):roiD(2), roiD(3):roiD(4));

% Preview selecion:
nrow = 2; ncol = 4;
fig = figure; set(fig, 'pos', [267 233 959 420], 'color', 'k');
hold on;
subplot(nrow, ncol, 1) %Arena B
imshow(imgB)
subplot(nrow, ncol, 2) %Arena D
imshow(imgD)
subplot(nrow, ncol, 5) %Arena A
imshow(imgA)
subplot(nrow, ncol, 6) %Arena C
imshow(imgC)
subplot(nrow, ncol, [3:4,7:8]) %Arena B
imshow(demoImg)
save_figure(fig, [baseFolder folder '\' expName ' Video Cropping'], '-pdf')

switch questdlg('Acceptable quadrants?')
    case 'Yes'
    case 'No'
        return
    case 'Cancel'
        return
end

%% Split the videos

for vid = 1:nvids
    movieInfo = VideoReader([baseFolder folder '\' expName '_' num2str(vid) '.avi']); %read in video
    nframes = movieInfo.duration;
    h = waitbar(0,['Cropping video ' num2str(1) '/' num2str(nvids)]);
    
    % initiate arena A writer
    videoA = [baseFolder folder '\' expName 'A_' num2str(vid) '.avi'];
    vidA = VideoWriter(videoA, 'Motion JPEG AVI');
    vidA.Quality = 75;
    vidA.FrameRate = 6;
    open(vidA);
    % initiate arena B writer
    videoB = [baseFolder folder '\' expName 'B_' num2str(vid) '.avi'];
    vidB = VideoWriter(videoB, 'Motion JPEG AVI');
    vidB.Quality = 75;
    vidB.FrameRate = 6;
    open(vidB);
    % initiate arena A writer
    videoC = [baseFolder folder '\' expName 'C_' num2str(vid) '.avi'];
    vidC = VideoWriter(videoC, 'Motion JPEG AVI');
    vidC.Quality = 75;
    vidC.FrameRate = 6;
    open(vidC);
    % initiate arena B writer
    videoD = [baseFolder folder '\' expName 'D_' num2str(vid) '.avi'];
    vidD = VideoWriter(videoD, 'Motion JPEG AVI');
    vidD.Quality = 75;
    vidD.FrameRate = 6;
    open(vidD);
    
    figA = figure; set(figA, 'color', 'k');
    
    for frame = 1:nframes
        %Extract and crop frames
        demoImg = rgb2gray(read(movieInfo,frame));
        imgA = demoImg(roiA(1):roiA(2), roiA(3):roiA(4));
        imgB = demoImg(roiB(1):roiB(2), roiB(3):roiB(4));
        imgC = demoImg(roiC(1):roiC(2), roiC(3):roiC(4));
        imgD = demoImg(roiD(1):roiD(2), roiD(3):roiD(4));
        
        %Save frames to new videos
        imshow(imgA)
        set(figA, 'Color', 'k')
        f = getframe(fig);
            writeVideo(v, f)  
            clf('reset')
        


            img = read(movieInfo,frame);
            imagesc(img)
            
            hold on
            x = squeeze(headdata(frame, 1, :));
            y = squeeze(headdata(frame, 2, :));
            x(isnan(x)) = []; % remove empty tracks
            y(isnan(y)) = [];
            scatter(x,y, 30, 'y')
            axis tight; axis square
            set(gca, 'visible', 'off')
            f = getframe(fig);
            writeVideo(v, f)  
            clf('reset') 

        close(v)
        close(fig)
        
        
        
        
        
        
        % update the waitbar every 10 frames
        if rem(frame,10) == 0
            waitbar(frame/nvid,h)
        end   
    end
    close h
end




% Make new analyzed file directory
analysisDir = [baseFolder folder '\analysis\'];
if ~isfolder(analysisDir); mkdir(analysisDir); end
expPDF = [analysisDir expName ' summary.pdf'];

% Load relevant data files (.mat, .csv, .h5)
warning off
% load matlab file for experiment 
expData = load([baseFolder folder '\' expName 'dataMat.mat']);

% load the temperature log for the experiment
tempLog = readmatrix([baseFolder folder '\' expName '_RampLog']);

nvids = expData.num.vids;
for vid = 1:nvids
    % load tracking predictions
    filePath = [baseFolder folder '\' expName '_' num2str(vid) '.h5'];
    data(vid).occupancy_matrix = h5read(filePath,'/track_occupancy');
    data(vid).tracks = h5read(filePath,'/tracks');
end

initial_vars = who; initial_vars{end+1} = 'initial_vars';
fprintf('\nNext\n')
