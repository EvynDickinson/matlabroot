%% 
vidPath = 'E:\My Drive\Jeanne Lab\DATA\08.12.2021\DummyVid_20C_1.avi';
movieInfo = VideoReader(vidPath); %read in video
Img1 = read(movieInfo,1);
vidPath = 'E:\My Drive\Jeanne Lab\DATA\08.24.2021\PlantYeastChoice_N1_1.avi';
movieInfo = VideoReader(vidPath); %read in video
Img2 = read(movieInfo,1);


f = figure; set(f, 'color', 'k')
imshowpair(Img1, Img2,'montage'); title('Paint weathering')

save_figure(f, 'E:\My Drive\Jeanne Lab\DATA\Analysis\Paint weathering example', '-png');



%% get base folder pathway
baseFolder = getCloudPath;

params.well_1 = 'Plant';
params.well_2 = 'Empty';
params.well_3 = 'Empty';
params.well_4 = 'Empty';

params.genotype = select_cross; % choose the fly genotypes
params.protocol = select_protocol;  % choose experiment protocol

% move params into structure:
params.date = dirName;
params.expID = videoNames;
params.num = num;


writeExptoExcel(params) % save the data to the experiement list

% resave with same name: 
save([baseFolder dirName '\' videoNames 'dataMat'])


%% 
baseFolder = getCloudPath;

for i = 1:num.vids
    filename = [baseFolder dirName '\analysis\' videoNames '_' num2str(i) ' data'];
    load(filename);
    
    params.well_1 = 'Plant';
    
    save(filename, 'videoData', 'params')
end


%% Fix the temp log information being added...
clear
% manually load the exp data file
% Fix the MAIN file
[~,baseFolder] = getCloudPath(1);

tempLogStart = [(1:num.vids)', tempLogStart];
save([baseFolder, '\', videoNames, 'dataMat.mat'])

% load each vid file & adjust the temp log:
tempLog = readmatrix([baseFolder '\' videoNames '_RampLog']);
roi = [tempLogStart(:,3), tempLogEnd(:,3)];
filepath = [baseFolder, '\analysis\' videoNames '_'];

for i = 1:num.vids
    load([filepath num2str(i) ' data.mat']);
    
    % update file
    loc = tempLog(:,1)>=roi(i,1) & tempLog(:,1)<=roi(i,2);
    videoData.tempLog = tempLog(loc,:);
    
    % save file
    save([filepath num2str(i) ' data.mat'], 'params', 'videoData')
end

%% Video testing


Vq = interpn(tframe,3);
fig = getfig('',1);
hold on
for ii = 1:size(Vq,3)
    imagesc(Vq(:,:,ii))
    pause(0.05)
end


%% Crop out the regions around each food well to compare across trials...

figure;
mask = ~data(1).quadMask(1).mask;
imshow(mask);


for vid = 1:nvids
    Img = data(1).frame(:,:,vid); % Image
    
    
    imagesc(Img)
    
%     temp(vid) = mean(trialData(vid).videoData.tempLog(:,2)); %avg temp during video
    
    for roi = 1:4
        
        
        imgAdj = Img; % start with full image
        mask = data(1).quadMask(roi).mask;
        imgAdj(mask) = 0; % crop out frame
        %show masked image
        imagesc(imgAdj)
        
        props = regionprops(~mask, 'BoundingBox');
        maskedImage = imcrop(imgAdj, props.BoundingBox);
        % show cropped image
        imagesc(maskedImage);
        
        
        y(vid,roi) = sum(sum(imgAdj));
    end
end


props = regionprops(mask, 'BoundingBox');
maskedImage = imcrop(Img, props.BoundingBox);
imshow(maskedImage, []);


% Crop the image to the bounding box.
props = regionprops(mask, 'BoundingBox');
maskedImage = imcrop(maskedImage, props.BoundingBox);
% Display it in the lower right plot.
subplot(2, 2, 4);
imshow(maskedImage, []);


%%


%% Simple visualization: relationship between temp & well occupation
nrow = 4;
ncol = 1;
subplotInd(1).idx = 1;
subplotInd(2).idx = 2:4;
% group data across videos:
[plotX, plotY] = deal([]);
for vid = 1:nvids
    plotX = [plotX, data(vid).tempLog];
    plotY = [plotY; data(vid).well_counts];
end
% adj plant label bias:
plotY(:,3) = plotY(:,3)-3;

plotY = plotY./nflies;
sSpan = 180;
LW = 1;
time = linspace(1,(length(plotX)/3)/60,length(plotX));

fig = getfig('',1); 
    subplot(nrow,ncol,subplotInd(1).idx)
    plot(time, smooth(plotX,sSpan), 'linewidth', LW, 'color', 'w')
    ylabel('temp (\circC)')
    ylim([5,25])
    subplot(nrow,ncol,subplotInd(2).idx)
    hold on
    for well = 1:4
        switch expData.params.(['well_' num2str(well)'])
            case 'Yeast'
                kolor = Color('gold');
            case 'Plant'
                kolor = Color('green');
            case 'Empty'
                kolor = Color('grey');
        end

        plot(time, smooth(plotY(:,well),sSpan), 'linewidth', LW, 'color', kolor);
    end
    xlabel('time (min)'); ylabel('occupation probability')
    
formatFig(fig, true, [nrow, ncol], subplotInd)
l = legend(wellLabels);
set(l, 'color', 'k', 'textcolor', 'w','position', [0.7947 0.6462 0.0963 0.1126])
subplot(nrow,ncol,subplotInd(1).idx)
set(gca, 'XColor', 'k')
titleName = strrep([folder ' ' expName], '_',' ');
title(titleName,'color', 'w')

% Save image
save_figure(fig, [analysisDir expName ' adjusted well occupation timcourse'], '-png');


%%  Compare the temp passive warming ramps

% load the temperature log for the experiment

fileList = {'G:\My Drive\Jeanne Lab\DATA\09.22.2021\PlantYeastChoice_N1_RampLog(1).csv',...
            'G:\My Drive\Jeanne Lab\DATA\09.21.2021\PlantChoice_N1_RampLog.csv',...
            'G:\My Drive\Jeanne Lab\DATA\09.08.2021\PlantYeastChoice_N1_RampLog.csv',...
            'G:\My Drive\Jeanne Lab\DATA\09.08.2021\PlantYeastChoice_N2_RampLog.csv',...
            'G:\My Drive\Jeanne Lab\DATA\09.03.2021\PlantYeastChoice_N1_RampLog.csv'};

nlogs = length(fileList);
for ii = 1:nlogs
    tempLog = readmatrix(fileList{ii});
    temp(ii).log = tempLog(:,2);
end



% 
X = [8 12 16 18 20 22 23 23.7 24 25];
Y = [572 576 582 586 592 602 614 630 650 763];

X = [8 20 22 23.5 24 25]
Y = [191 197 201 209 215 255];

time = round((Y*4)/12);
test = time - (time(1)-15);


figure;
hold on
for ii = 1:nlogs
    y = temp(ii).log;
    plot(y)
end
vline(time)

figure;
hold on
for ii = 1:nlogs
    x = linspace(0,length(temp(ii).log)/12,length(temp(ii).log));
    y = temp(ii).log;
    plot(x,y)
end
plot(Y,X, 'color', 'k', 'linewidth', 1)
xlabel('time (min)')



%% Supervised tracking cleaning:

% tracks(time, body part, x|y, animalID)

size(data(vid).tracks)



% try to find frames that don't move for Threshold time during video
x_loc = squeeze(data(vid).tracks(:,1,1,:));
y_loc = squeeze(data(vid).tracks(:,1,2,:));




%%
newVars = {'dayList', 'root', 'day', 'ii', 'newVars'};
dayList = {'11.11.2021', '11.10.2021', '11.09.2021', '11.08.2021'};
root = 'G:\My Drive\Jeanne Lab\DATA\';

for day = 1:4 %exeriment days
  for ii = 1:4 %wells
    clearvars('-except',newVars{:})

    load([root dayList{day} '/Arena ' Alphabet(ii) '/analysis/PlantYeastChoice' Alphabet(ii) ' timecourse data.mat'])

    % find distance from center for each fly:
    FDist = [];
    idx = 0;
    for vid = 1:nvids
        for frame = 1:length(data(vid).tempLog)
            idx = idx+1;
            for well = 1:4
                test = [wellcenters(:,well)'; data(vid).x_loc(frame,:)',data(vid).y_loc(frame,:)'];
                D = squareform(pdist(test));
                D = D(2:end,1);
                D(isnan(D)) = [];
                FDist(well).N(idx,:) = [median(D), std(D)];
            end
        end
    end

    occupancy.dist2wells = FDist;

    % occupancy.eccentricity = EDist;
    nrow = 4;
    ncol = 1;
    subplotInd(1).idx = 1;
    subplotInd(2).idx = 2:4;
    % group data across videos:
    plotX = occupancy.time;
    sSpan = 180;
    LW = 1;

    fig = getfig(''); 
        subplot(nrow,ncol,subplotInd(1).idx)
        y = smooth(occupancy.temp,sSpan);
        plot(plotX(2:end-1), y(2:end-1), 'linewidth', LW, 'color', 'w')
        ylabel('temp (\circC)')
        ylim([5,27])

        subplot(nrow,ncol,subplotInd(2).idx)
        hold on
        % error fills
        for well = 1:4
            kolor = pullFoodColor(wellLabels{well}); % plotting color for food
            y_avg(:,well) = smooth(FDist(well).N(:,1),sSpan);
            y_err(:,well) = smooth(FDist(well).N(:,2),sSpan);
            fill_data = error_fill(plotX, y_avg(:,well), y_err(:,well));
            h(well) = fill(fill_data.X, fill_data.Y, kolor, 'EdgeColor','none');
            set(h(well), 'facealpha', 0.2)
        end
        % average line
        for well = 1:4
            kolor = pullFoodColor(wellLabels{well});
            plot(time,y_avg(:,well), 'linewidth', LW, 'color', kolor);
        end
        xlabel('time (min)'); ylabel('avg distance between fly and food (a.u.)')

    formatFig(fig, true, [nrow, ncol], subplotInd);
    l = legend([{'';'';'';''};strrep(wellLabels,'_','-')]);
    set(l, 'color', 'k', 'textcolor', 'w','position', [0.7947 0.6462 0.0963 0.1126])
    for well = 1:4
        set(get(get(h(well),'Annotation'),'LegendInformation'),'IconDisplayStyle','off');
    end
    subplot(nrow,ncol,subplotInd(1).idx)
    set(gca, 'XColor', 'k')
    titleName = strrep([folder ' ' expName ' Arena ' arenaSel], '_',' ');
    title(titleName,'color', 'w')

    % save and export figure
    export_fig(fig, expPDF, '-pdf', '-nocrop', '-r300' , '-rgb','-append');

    export_fig(fig, [analysisDir expName arenaSel ' avg distance to well.png'], '-png', '-nocrop', '-r300' , '-painters', '-rgb');
    close(fig)

     
    dist2wells = FDist;
    save([analysisDir expName arenaSel ' timecourse data.mat'],'dist2wells','-append')

    disp(['Done ' dayList{day} ' arena ' arenaSel])
  end
end






































