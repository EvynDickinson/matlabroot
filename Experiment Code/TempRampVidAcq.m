%% REFRESH
clear; clc
close all
imaqreset

%% Camera Setup 

% image cropping parameters
full_ROI = [0 0 2048 2048];
partial_ROI = [72 94 1901 1918]; %[420 656 1248 1244];

% Load in the camera / open preview
vid = videoinput('pointgrey', 1, 'F7_Raw8_2048x2048_Mode0');
src = getselectedsource(vid);

% camera parameters
src.Brightness = 11.127068;
src.Exposure  = 2;
src.FrameRate = num.fps;
src.Gain = 6.0;
src.Gamma = 1.5;
src.Shutter = 5;

vid.FramesPerTrigger = inf;
% vid.ROIPosition = rectangular_ROI;
%   vid.ROIPosition = full_ROI;
vid.ROIPosition = partial_ROI;

preview(vid)


%% Set Parameters

ArenaGUI

%% Final details

% % Directories: 
% basePath = 'C:\Users\jeannelab\Documents\Evyn\DATA\';
% dirName = strrep(datestr(datetime, 'mm-dd-yyyy'), '-', '.');
% video_path = [basePath, dirName, '\'];
% 
% searchPath = [basePath, dirName, '\*.csv'];         % path for temperature logging
% % Make temp log dummy (for naming purposes)
% fclose(fopen([video_path videoNames '_RampLog.csv'], 'w+'));
% 
% % load parameters from the GUI data:



videoNames = 'PlantChoice_N1'; %'PlantYeastChoice_N1'; % TODO -- add dynamic option
params.well_1 = 'Plant9_1'; %'Plant9_1';
params.well_2 = 'Plant9_20_C';    %'Plant9_20_A';
params.well_3 = 'Plant9_20_A'; %'Plant9_20_B';
params.well_4 = 'Plant9_20_B'; %'Plant9_20_C';
params.PF_Batch = '9.1/20';  % batch date for plant food
params.YF_Batch = 'n/a';     % batch date for yeast food
params.fly_batch = '9.15';    %date of fly eclosion or roughly thereabouts

num.fps = 3;               % acquisition frame rate
num.writeFPS = 3;          % frame rate of recorded video

num.vidLength = 10;         % desired video length in minues
num.sessionLength = 240;    % total recording length desired (in minutes)

% autogenerated parameters
num.framesPerVid = num.vidLength*num.fps*60;        % number of frames in each video
num.vids = ceil(num.sessionLength/num.vidLength);   % number of videos within the exp. session
params.genotype = select_cross; % choose the fly genotypes
params.protocol = select_protocol;  % choose experiment protocol



%% Run experiment:
closepreview(vid)

switch questdlg(['Open TecaLog & set DataLog path to ' dirName],'Log Start', 'Okay', 'Cancel','Okay')
    case 'Okay'
        switch questdlg('Start data log & ramp/soak', 'Log Start', 'Okay', 'Cancel','Okay')
            case 'Okay'
                fprintf(['\n Begin collection of ' num2str(num.vids)  ' videos\n']) 
            case 'Cancel'
                return
        end
    case 'Cancel'
        return
end

% Get list of current logs
for n = 1:num.vids
    % pull the current temp reading from the chiller log
    tempLogStart(n,:) = [n, logTempNow(searchPath)];

    % Set video saving
    diskLogger = VideoWriter([video_path videoNames '_' num2str(n) '.avi'], 'Motion JPEG AVI');
    vid.LoggingMode = 'disk';   %'disk&memory'; 
    diskLogger.Quality = 65;
    diskLogger.FrameRate = num.writeFPS; 
    vid.DiskLogger = diskLogger;  

    start(vid)
    pause(num.vidLength*60) % pause for the duration of each video
    stop(vid)
    
    % pull the current temp reading from the chiller log
    tempLogEnd(n,:) = [n, logTempNow(searchPath)];
    
    fprintf(['\n' num2str(n) ' / ' num2str(num.vids)  '\n']) 
end

% move params into structure:
params.date = dirName;
params.expID = videoNames;
params.num = num;

save([video_path videoNames 'dataMat'])

writeExptoExcel(params) % save the data to the experiment list

fprintf(['\n' 'Done' '\n']) 



















