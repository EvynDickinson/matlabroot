
function tempPoints = getTempTurnPoints(TempProtocolString)
% tPoints = getTempTurnPoints(tempList{ii})


% Use this to find temp points for new temp protocols:
% figure; plot(smooth(data(1).occupancy.temp),'color', 'k')


% pull the appropriate start|end points:
switch TempProtocolString
    % =======================================
    case 'double_eaton_cooling_warming_ramp'
        tempPoints.down = [5720,34628;...
                           64819,93739];
        tempPoints.up =   [34629,64818;...
                           93740,141259];
                       
    case 'double_eaton_warming_cooling_ramp'
        tempPoints.up =   [5720,34628;...
                           64819,93739];
        tempPoints.down = [34629,64818;...
                           93740,141259];
    % =======================================                   
    case 'eaton_cooling_warming_ramp'
        tempPoints.down = [5700,34799];
        tempPoints.up =   [34800,64000];
    case 'eaton_warming_cooling_ramp'
        tempPoints.down = [34800,64000];
        tempPoints.up =   [5700,34799];
    % =======================================    
    case 'double_linear_cooling_ramp'
        tempPoints.down = [5549,23510;...
                           52221,70330;...
                           98831,117100];
        tempPoints.up =   [28871, 46850;...
                           75571,93480;...
                           122401,140399];
        tempPoints.hold = [23511 28870;...
                           46851 52220;...
                           70331 75570;...
                           93481 98830;...
                           117101 122400;...
                           140400 148300];
       tempPoints.nRates = 3; % -0.25,0, 0.25
       tempPoints.rates = [-0.25,0,0.25];
    case 'double_linear_heating_ramp'
        tempPoints.up =   [5549,23510;...
                           52221,70330;...
                           98831,117100];
        tempPoints.down = [28871, 46850;...
                           75571,93480;...
                           122401,140399];
        tempPoints.hold = [23511 28870;...
                           46851 52220;...
                           70331 75570;...
                           93481 98830;...
                           117101 122400;...
                           140400 148300];   
        tempPoints.nRates = 3; % -0.25,0, 0.25\
        tempPoints.rates = [-0.25,0,0.25];
    % =======================================  
    case 'Velocity Ramp A Up'
        tempPoints.hold = [];
        tempPoints.up =   [2924, 19150;...
                           51340,64090;... 
                           77100,83630;... 
                           90200,122500];
        tempPoints.down = [19151,51339;... 
                           64091,77099;... 
                           83631,90199;... 
                           122501,154500];
        tempPoints.nRates = 7;
        tempPoints.rates = [-0.5, -0.25, -0.1, 0, 0.1, 0.25, 0.5];
    % =======================================  
    case 'Velocity Ramp B Up'
        tempPoints.hold = [];
        tempPoints.up =   [2371 19210;...
                           51260 57720;...
                           64240 77290;...
                           90230 122500];
        tempPoints.down = [19211 51259;...
                           57721 64239;...
                           77291 90229;...
                           122501 154500];
        tempPoints.nRates = 7;
        tempPoints.rates = [-0.5, -0.25, -0.1, 0, 0.1, 0.25, 0.5];
    case 'Velocity Ramp C Up'
        tempPoints.hold = [];
        tempPoints.up = [2853 9312;...
                         22276 54513;...
                         86805 93305;...
                         99884 112443];
        tempPoints.down = [9313 22275;...];
    case 'Velocity Ramp D Up'
    case 'Velocity Ramp E Up'
    case 'Velocity Ramp F Up'
  
end

% increasing|decreasing ROI:
nUp = size(tempPoints.up,1);
nDown = size(tempPoints.down,1);
tempPoints.nUp = nUp;
tempPoints.nDown = nDown;
UpROI = [];
for ii = 1:nUp
    roi = tempPoints.up(ii,1):tempPoints.up(ii,2);
    UpROI = [UpROI,roi];
end
DownROI = [];
for ii = 1:nDown
    roi = tempPoints.down(ii,1):tempPoints.down(ii,2);
    DownROI = [DownROI,roi];
end
tempPoints.UpROI = UpROI;
tempPoints.DownROI = DownROI;

% just pull all the points where the temp ramp changes rate:

temp = [tempPoints.up; tempPoints.down; tempPoints.hold];

    
temp = [1; sort(temp(:))];
loc = diff(temp)<10;
temp(loc) = [];
tempPoints.transitions = temp;





