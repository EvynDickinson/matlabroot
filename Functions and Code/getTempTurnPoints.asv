
function tempPoints = getTempTurnPoints(TempProtocolString)
% tPoints = getTempTurnPoints(tempList{ii})


% Use this to find temp points for new temp protocols:
% figure; plot(smooth(data(1).occupancy.temp),'color', 'k')
% figure; plot(smooth(T.temperature,360),'color', 'k')

temp = smooth(T.temperature,5);
sel = (max(x0)-min(x0))/4;

minLoc = peakfinder(temp,'extrema',-1);
maxLoc = peakfinder(temp,'extrema',1);

figure;hold on
plot(temp)
scatter(minLoc,temp(minLoc))
scatter(maxLoc,temp(minLoc))

% pull the appropriate start|end points:
switch TempProtocolString
    % =======================================
    case 'double_eaton_cooling_warming_ramp'
        tempPoints.down = [5720,34628;...
                           64819,93739];
        tempPoints.up =   [34629,64818;...
                           93740,141259];
                       
    case 'double_eaton_warming_cooling_ramp'
        tempPoints.up =   [5720,34628;...
                           64819,93739];
        tempPoints.down = [34629,64818;...
                           93740,141259];
    % =======================================                   
    case 'eaton_cooling_warming_ramp'
        tempPoints.down = [5700,34799];
        tempPoints.up =   [34800,64000];
    case 'eaton_warming_cooling_ramp'
        tempPoints.down = [34800,64000];
        tempPoints.up =   [5700,34799];
    % =======================================    
    case 'double_linear_cooling_ramp'
        tempPoints.down = [5549,23510;...
                           52221,70330;...
                           98831,117100];
        tempPoints.up =   [28871, 46850;...
                           75571,93480;...
                           122401,140399];
        tempPoints.hold = [23511 28870;...
                           46851 52220;...
                           70331 75570;...
                           93481 98830;...
                           117101 122400;...
                           140400 148300];
       tempPoints.nRates = 3; % -0.25,0, 0.25
       tempPoints.rates = [-0.25,0,0.25];
    case 'double_linear_heating_ramp'
        tempPoints.up =   [5549,23510;...
                           52221,70330;...
                           98831,117100];
        tempPoints.down = [28871, 46850;...
                           75571,93480;...
                           122401,140399];
        tempPoints.hold = [23511 28870;...
                           46851 52220;...
                           70331 75570;...
                           93481 98830;...
                           117101 122400;...
                           140400 148300];   
        tempPoints.nRates = 3; % -0.25,0, 0.25\
        tempPoints.rates = [-0.25,0,0.25];
    % =======================================  
    case 'Velocity Ramp A Up'
        tempPoints.hold = [];
        tempPoints.up =   [2924, 19150;...
                           51340,64090;... 
                           77100,83630;... 
                           90200,122500];
        tempPoints.down = [19151,51339;... 
                           64091,77099;... 
                           83631,90199;... 
                           122501,154500];
        tempPoints.nRates = 7;
%         tempPoints.rates = [-0.5, -0.25, -0.1, 0, 0.1, 0.25, 0.5]; 
        tempPoints.rates = [-0.5, -0.25, -0.1, 0.1, 0.25, 0.5]; 
        tempPoints.threshLow = 6;
        tempPoints.threshHigh = 25;
    case 'Velocity Ramp B Up'
        tempPoints.hold = [];
        tempPoints.up =   [2371 19210;...
                           51260 57720;...
                           64240 77290;...
                           90230 122500];
        tempPoints.down = [19211 51259;...
                           57721 64239;...
                           77291 90229;...
                           122501 154500];
        tempPoints.nRates = 7;
        %         tempPoints.rates = [-0.5, -0.25, -0.1, 0, 0.1, 0.25, 0.5]; 
        tempPoints.rates = [-0.5, -0.25, -0.1, 0.1, 0.25, 0.5]; 
        tempPoints.threshLow = 6;
        tempPoints.threshHigh = 25;
    case 'Velocity Ramp C Up'
        tempPoints.hold = [];
        tempPoints.up =   [2853 9312;...
                           22276 54513;...
                           86805 93305;...
                           99884 112443];
        tempPoints.down = [9313 22275;...
                           54514 86804;...
                           93306 99883;...
                           112744 125577];
        tempPoints.nRates = 7;
        %         tempPoints.rates = [-0.5, -0.25, -0.1, 0, 0.1, 0.25, 0.5]; 
        tempPoints.rates = [-0.5, -0.25, -0.1, 0.1, 0.25, 0.5]; 
        tempPoints.threshLow = 6;
        tempPoints.threshHigh = 25;
    case 'Velocity Ramp D Up'
        tempPoints.up =   [2864 9338;...
                           22217 28625;...
                           35259 67423;...
                           99839 112803];
        tempPoints.down = [9339 22216;...
                           28626 35258;...
                           67424 99838;...
                           112804 125516];
        tempPoints.hold = [];
        tempPoints.nRates = 7;
        %         tempPoints.rates = [-0.5, -0.25, -0.1, 0, 0.1, 0.25, 0.5]; 
        tempPoints.rates = [-0.5, -0.25, -0.1, 0.1, 0.25, 0.5]; 
        tempPoints.threshLow = 6;
        tempPoints.threshHigh = 25;
    case 'Velocity Ramp E Up'
        tempPoints.up =   [2781 6005;...
                           12570 45089;...
                           77070 90129;...
                           103000 109399];
        tempPoints.down = [6006 12569;...
                           45090 77069;...
                           90130 102999;
                           109400 115800];
        tempPoints.hold = [];
        tempPoints.nRates = 7;
        %         tempPoints.rates = [-0.5, -0.25, -0.1, 0, 0.1, 0.25, 0.5]; 
        tempPoints.rates = [-0.5, -0.25, -0.1, 0.1, 0.25, 0.5]; 
        tempPoints.threshLow = 6;
        tempPoints.threshHigh = 25;
    case 'Velocity Ramp F Up'
        tempPoints.up =   [2809 6016;...
                           12604 25504;...
                           38442 70725;...
                           102912 109415];
        tempPoints.down = [6017 12603;...
                           25505 38441;...
                           70726 102911;...
                           109416 115806];
        tempPoints.hold = [];
        tempPoints.nRates = 7;
        tempPoints.rates = [-0.5, -0.25, -0.1, 0, 0.1, 0.25, 0.5];
        tempPoints.threshLow = 6;
        tempPoints.threshHigh = 25;
    % ======================================= 
    case 'looping_ramps_up'
        tempPoints.up =   [2810 11924;...
                           29826 47748;...
                           65705 83597;...
                           101612 119747];
        tempPoints.down = [11925 29825;...
                           47749 65704;...
                           83598 101611];
        tempPoints.hold = [];
        tempPoints.nRates = 2;
        tempPoints.rates = [-0.16, 0.16];
        tempPoints.threshLow = 7;
        tempPoints.threshHigh = 23;
    case 'looping_ramps_down'
        tempPoints.down =   [2810 11924;...
                           29826 47748;...
                           65705 83597;...
                           101612 119747];
        tempPoints.up = [11925 29825;...
                           47749 65704;...
                           83598 101611];
        tempPoints.hold = [];
        tempPoints.nRates = 2;
        tempPoints.rates = [-0.16, 0.16];
        tempPoints.threshLow = 7;
        tempPoints.threshHigh = 23;
end

% increasing|decreasing ROI:
nUp = size(tempPoints.up,1);
nDown = size(tempPoints.down,1);
tempPoints.nUp = nUp;
tempPoints.nDown = nDown;
UpROI = [];
for ii = 1:nUp
    roi = tempPoints.up(ii,1):tempPoints.up(ii,2);
    UpROI = [UpROI,roi];
end
DownROI = [];
for ii = 1:nDown
    roi = tempPoints.down(ii,1):tempPoints.down(ii,2);
    DownROI = [DownROI,roi];
end
tempPoints.UpROI = UpROI;
tempPoints.DownROI = DownROI;

tempPoints.nRates = length(tempPoints.rates);

% just pull all the points where the temp ramp changes rate:

temp = [tempPoints.up; tempPoints.down; tempPoints.hold];
% temp = [1; sort(temp(:))];
temp = sort(temp(:)); % white background adjustment
loc = diff(temp)<10;
temp(loc) = [];
tempPoints.transitions = temp;





